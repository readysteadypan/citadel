- content_for(:title) { @user.name }

- user_p = present(@user)

- if user_can_edit_user?
  = link_to edit_user_path(@user), class: 'btn btn-default pull-right', type: 'button' do
    Settings
    %span.glyphicon.glyphicon-cog

.row
  .pull-left
    = image_tag @user.avatar.icon.url, class: 'group-avatar'

  .group-title
    %h2.spaced-letters= @user.name
    = user_p.badge

    - unless @aka.empty?
      %p.group-aka aka #{@aka.map(&:name).join(', ')}

%p.steam-link-large
  = user_p.steam_link
  %span.dropdown
    - data = { toggle: :collapse, target: '#steam-id-collapse' }
    %button.btn.btn-link.btn-xs{ type: :button, data: data }
      %span.caret

.pull-right.collapse#steam-id-collapse
  .card.small
    .steam-id-large= @user.steam_32
    %br
    .steam-id-large= @user.steam_id

.row
  != present_collection(@titles).map(&:icon).join(' ')

  .pull-right= render 'users/bans/list', user: @user

%hr

- if current_user? && !@team_invites.empty?
  - @team_invites.each do |invite|
    - team = invite.team
    .alert.alert-info
      You have been invited to join #{present(team).link}

      .button-group.pull-right
        = button_to decline_team_invite_path(team),
                    method: :delete, class: 'btn btn-danger' do
          Decline
          %span.glyphicon.glyphicon-remove
      .button-group.pull-right
        = button_to accept_team_invite_path(team),
                    method: :post, class: 'btn btn-success' do
          Accept
          %span.glyphicon.glyphicon-ok

.panel.panel-default
  .panel-heading Description
  .panel-body.markdown= user_p.description

- if user_p.notice != '' && (user_can_edit_users? || (current_user? && current_user == @user))
  .panel.panel-warning
    .panel-heading Notice
    .panel-body.markdown= user_p.notice

- unless @matches.empty?
  .panel.panel-info
    .panel-heading Upcoming Matches
    %ul.list-group
      - present_collection(@matches).each do |match|
        %li.list-group-item
          = match.link

.panel.panel-default
  .panel-heading Teams
  %ul.list-group
    - @teams.each do |team|
      %li.list-group-item
        = link_to team.name, team_path(team)
        - if current_user?
          .button-group.pull-right
            = button_to leave_team_path(team), method: :patch, class: 'btn btn-danger' do
              Leave
              %span.glyphicon.glyphicon-remove

.panel.panel-default
  .panel-heading Transfers
  %ul.list-group
    - @team_transfers.each do |transfer|
      %li.list-group-item
        - if transfer.is_joining?
          joined
        - else
          left
        #{present(transfer.team).link} on #{transfer.created_at.strftime('%c')}

- unless @rosters.empty?
  .panel.panel-default
    .panel-heading Leagues
    %ul.list-group
      - present_collection(@rosters).each do |roster|
        - unless roster.league.hidden?
          %li.list-group-item= roster.user_listing

- unless @forums_posts.empty?
  .panel.panel-default
    .panel-heading
      Recent Forum Posts
      = link_to search_forums_posts_path(user_id: @user.id), class: 'btn btn-default pull-right' do
        View All

    %ul.list-group
      - present_collection(@forums_posts).each do |post|
        %li.list-group-item
          = post.thread.link
          .pull-right= post.created_at

- if user_can_edit_users?
  .panel.panel-info
    .panel-heading Admin Comments

    - @comments.each do |comment|
      - options = { user: @user, comment: comment, quote_id: 'wmd-input-user-comment' }

      - if comment.exists?
        = render 'users/comments/comment', options
      - else
        = render 'users/comments/deleted_comment', options

    .container-fluid
      %hr
      = bootstrap_form_for @comment, as: :comment, url: user_comments_path(@user) do |f|
        = render 'users/comments/form', f: f

        .row
          = f.submit 'Post', class: 'btn btn-default pull-right'
      %hr
